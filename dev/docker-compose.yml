version: '3.4'

networks:
  ecm-network:
    driver: bridge

services:
  ecm-postgres:
    image: postgres:15.3
    container_name: ecm-postgres
    restart: always
    ports:
      - "54329:5432"
    command: postgres -c 'max_connections=300'
    environment:
      POSTGRES_USER: ecm
      POSTGRES_PASSWORD: P@ssw0rd!
      TZ: Asia/Jakarta
    volumes:
      - ecm-postgres-data:/var/lib/postgresql/data
    networks:
      - ecm-network

  ecm-solr:
    image: solr:8.11.2
    container_name: ecm-solr
    user: "solr:solr"
    ports:
     - "7983:8983"
    restart: always
    environment:
      - TZ=Asia/Jakarta
      - SOLR_USER=solr
      - SOLR_GROUP=solr
    volumes:
      - ./config/security.json:/var/solr/data/security.json
      - ./config/managed-schema.xml:/managed-schema.xml
      - ecm-solr-data:/var/solr
    command: >
      sh -c "precreate-core document; cp managed-schema.xml /var/solr/data/document/conf/managed-schema; precreate-core document_bundle; cp managed-schema.xml /var/solr/data/document_bundle/conf/managed-schema; precreate-core folder; cp managed-schema.xml /var/solr/data/folder/conf/managed-schema; exec solr -f"
    networks:
      - ecm-network
  
  ecm-redis:
    image: bitnami/redis:latest
    container_name: ecm-redis
    ports:
     - "5057:6379"
    restart: always
    environment:
      # - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PASSWORD=P@ssw0rd!
      - TZ=Asia/Jakarta
    volumes:
      - ecm-redis-data:/data
    networks:
      - ecm-network

  ecm-admin-service:
    image: openjdk:17-alpine
    container_name: ecm-admin-service
    restart: always
    ports:
      - "5050:5050"
    networks:
      - ecm-network
    environment:
      - TZ=Asia/Jakarta
    volumes:
      - ./apps/admin-service.jar:/app/admin-service.jar
    command: >
      sh -c "java -jar /app/admin-service.jar"

  ecm-fp-service:
    image: openjdk:17-alpine
    container_name: ecm-fp-service
    restart: always
    ports:
      - "5051:5051"
    networks:
      - ecm-network
    environment:
      - TZ=Asia/Jakarta
    volumes:
      - ./apps/fp-service.jar:/app/fp-service.jar
      - /home/centos/ecm-file-uploads:/uploads
    command: >
      sh -c "apk add --no-cache fontconfig ttf-dejavu && java -jar /app/fp-service.jar"

  ecm-frontend:
    image: nginx:alpine
    container_name: ecm-frontend
    restart: always
    ports:
      - "80:80"
    networks:
      - ecm-network
    environment:
      - TZ=Asia/Jakarta
    volumes:
      - ./apps/frontend.tar.gz:/app/frontend.tar.gz
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/nginx/certs
    command: >
      sh -c "apk add --no-cache tzdata && tar -xf /app/frontend.tar.gz -C /usr/share/nginx/html/ && nginx -g 'daemon off;'"

  ecm-task-service:
    image: openjdk:17-alpine
    container_name: ecm-task-service
    restart: always
    ports:
      - "5052:5052"
    networks:
      - ecm-network
    environment:
      - TZ=Asia/Jakarta
    volumes:
      - ./apps/task-service.jar:/app/task-service.jar
    command: >
      sh -c "java -jar /app/task-service.jar"

  ecm-nodered-service:
    image: node:16
    container_name: ecm-nodered-service
    restart: always
    ports:
      - "1880:1880"
    networks:
      - ecm-network
    environment:
      - TZ=Asia/Jakarta
    volumes:
      - ./apps/docmgt-nodered:/app
      - ecm-nodered-data:/data
      - ./config/flow.json:/data/flow.json
      - ./config/settings.js:/data/settings.js
    command: >
      sh -c "cd ./app && npm install --force && npm start"

  ecm-ocr-service:
    image: python:3.9.17-bullseye
    container_name: ecm-ocr-service
    restart: always
    ports:
      - "5053:5053"
    networks:
      - ecm-network
    environment:
      - TZ=Asia/Jakarta
    volumes:
      - ./apps/OCR-PaddleOCR:/app
      - /home/centos/ecm-file-uploads:/uploads
    command: >
      sh -c "apt-get update && apt-get install -y libgl1 && cd /app && pip3 install pyOpenSSL && pip3 install -r requirements.txt && pip3 install -r ppstructure/kie/requirements.txt && cd /app/ppstructure && python3 main.py"

volumes:
  ecm-solr-data: 
  ecm-postgres-data:
  ecm-redis-data:
  ecm-nodered-data:
