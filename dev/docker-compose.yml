version: '3.4'

networks:
    ecm-dev-network:
        external: true

services:
  ecm-postgres:
    image: postgres:15.3
    container_name: ecm-postgres-dev
    restart: always
    ports:
      - "54329:5432"
    command: postgres -c 'max_connections=300'
    environment:
      POSTGRES_USER: ecm
      POSTGRES_PASSWORD: P@ssw0rd!
      TZ: Asia/Jakarta
    volumes:
      - ecm-postgres-data-dev:/var/lib/postgresql/data
    networks:
      - ecm-dev-network
      
  ecm-solr:
    container_name: ecm-solr-dev
    build: 
      context: .
      dockerfile: Dockerfile.solr
    ports:
     - "7983:8983"
    restart: always
    environment:
      TZ: Asia/Jakarta
    volumes:
      - ecm-solr-data-dev:/var/solr
    command: >
      sh -c "precreate-core document; cp managed-schema.xml /var/solr/data/document/conf/managed-schema; precreate-core document_bundle; cp managed-schema.xml /var/solr/data/document_bundle/conf/managed-schema; precreate-core folder; cp managed-schema.xml /var/solr/data/folder/conf/managed-schema; exec solr -f"
    networks:
      - ecm-dev-network
  
  ecm-redis:
    image: bitnami/redis:latest
    container_name: ecm-redis-dev
    ports:
     - "6379:6379"
    restart: always
    environment:
      # - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PASSWORD=P@ssw0rd!
      - TZ=Asia/Jakarta
    volumes:
      - ecm-redis-data-dev:/data
    networks:
      - ecm-dev-network

  ecm-admin-service:
    image: ecm-admin-service:dev
    container_name: ecm-admin-service-dev
    build:
      context: .
      dockerfile: Dockerfile.admin-service
    restart: always
    expose:
      - "5050"
    ports:
      - "5050:5050"
    networks:
      - ecm-dev-network

  ecm-fp-service:
    image: ecm-fp-service:dev
    container_name: ecm-fp-service-dev
    build: 
      context: .
      dockerfile: Dockerfile.fp-service
    restart: always
    expose:
      - "5051"
    ports:
      - "5051:5051"
    volumes:
      - /home/centos/ecm-file-uploads:/uploads
    networks:
      - ecm-dev-network

  ecm-frontend:
    image: ecm-frontend:dev
    container_name: ecm-frontend-dev
    build: 
      context: .
      dockerfile: Dockerfile.frontend
    restart: always
    expose:
      - "80"
    ports:
      - "6080:80"
    networks:
      - ecm-dev-network

volumes:
  ecm-solr-data-dev: 
  ecm-postgres-data-dev:
  ecm-redis-data-dev:
  